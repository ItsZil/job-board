@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using job_board.Utilities
@using job_board.ViewModels
@using System.Text.Json;
@using System.Text;

@inject IHttpClientFactory ClientFactory
@inject IDialogService DialogService
@inject TokenAuthStateProvider TokenAuthStateProvider
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.Large">
    <MudPaper Elevation="3" Class="pa-4">
        <MudText Typo="Typo.h5" Class="mb-4">Login</MudText>

        <MudForm Model="_loginModel" OnValidSubmit="HandleSubmit">
            <MudTextField @bind-Value="_loginModel.Email" Label="Email" InputType="InputType.Email" Required="true" />
            <MudTextField @bind-Value="_loginModel.Password" Label="Password" InputType="InputType.Password" Required="true" />

            <br />
            <MudButton Disabled="@_processing" Type="ButtonType.Submit" OnClick="HandleSubmit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">
                @if (_processing)
                {
                    <MudProgressCircular Size="Size.Small" />
                }
                Login
                </MudButton>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    private LoginVM _loginModel = new LoginVM();
    private bool _loginError;
    private bool _processing = false;

    private async Task HandleSubmit()
    {
        if (string.IsNullOrEmpty(_loginModel.Password) || string.IsNullOrEmpty(_loginModel.Email))
        {
            await DialogService.ShowMessageBox("Error", "Please enter your email and password.");
            return;
        }
        _processing = true;

        if (_loginModel.Password.Contains("admin"))
            _loginModel.Role = "admin";

        var serializedModel = JsonSerializer.Serialize(_loginModel);
        var client = ClientFactory.CreateClient("httpClient");
        var authenticationResult = await client.PostAsync("api/Auth/login", new StringContent(serializedModel, Encoding.UTF8, "application/json"));
        _loginError = authenticationResult.StatusCode != System.Net.HttpStatusCode.Created;

        if (!_loginError)
        {
            string token = await authenticationResult.Content.ReadAsStringAsync();
            string tokenParam = $"token={Uri.EscapeDataString(token)}";
            Navigation.NavigateTo($"/login-callback?{tokenParam}");
        }
        else
        {
            _processing = false;
            await DialogService.ShowMessageBox("Error", "Invalid email or password.");
        }
    }
}
